
"use client";
// import React, { useState, useEffect, useRef } from "react";
import React from "react";
// import { motion } from "framer-motion";
// import {  Star,  Sparkles, Play, Pause, ChevronRight, SprayCan } from "lucide-react";
import {  Star,   SprayCan } from "lucide-react";
import Image from "next/image";




// ---------- Utility Components ----------
// const Container: React.FC<React.PropsWithChildren<{ className?: string }>> = ({ children, className = "" }) => (
//   <div className={`mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 ${className}`}>{children}</div>
// );

const Badge: React.FC<React.PropsWithChildren<{ className?: string }>> = ({ children, className = "" }) => (
  <span className={`inline-flex items-center rounded-full border px-3 py-1 text-xs tracking-wide ${className}`}>{children}</span>
);


const Button: React.FC<React.PropsWithChildren<{ onClick?: () => void; variant?: "primary" | "ghost" | "outline"; className?: string; as?: "button" | "a"; href?: string }> > = ({
  children,
  onClick,
  variant = "primary",
  className = "",
  as = "button",
  href,
}) => {
  const base = "rounded-2xl px-5 py-3 text-sm font-semibold transition shadow-sm";
  const styles =
    variant === "primary"
      ? "bg-black text-white hover:bg-zinc-800"
      : variant === "outline"
      ? "border border-black text-black hover:bg-black hover:text-white"
      : "text-black/80 hover:text-black";
  if (as === "a" && href) {
    return (
      <a href={href} className={`${base} ${styles} ${className}`}>{children}</a>
    );
  }
  return (
    <button onClick={onClick} className={`${base} ${styles} ${className}`}>{children}</button>
  );
};



// ---------- Data ----------
const products = [
  { id: 1, name: "Vanilla Noir", dupeOf: "Gourmand Vanilla", price: 1799, image: "/images/products/vanilla-noir.jpg", notes: "Vanilla • Coffee • Patchouli", rating: 4.7 },
  { id: 2, name: "Citrus Wake", dupeOf: "Citrus Fresh", price: 1699, image: "/images/products/citrus-wake.jpg", notes: "Bergamot • Grapefruit • Musk", rating: 4.6 },
  { id: 3, name: "Floral Serenade", dupeOf: "Rose Essence", price: 1899, image: "/images/products/floral-serenade.jpg", notes: "Rose • Jasmine • Sandalwood", rating: 4.8 },
  { id: 4, name: "Ocean Drift", dupeOf: "Marine Breeze", price: 1699, image: "/images/products/ocean-drift.jpg", notes: "Marine • Sea Salt • Amber", rating: 4.5 },
];


// ---------- Product Card ----------
const ProductCard: React.FC<{p: typeof products[number]}> = ({ p }) => (
  
  <div className="group rounded-2xl border bg-white overflow-hidden shadow-sm hover:shadow-md transition">
    <div className="relative aspect-[4/5] overflow-hidden">

      <Image src={p.image} alt={p.name}  height='100' width='100' className="h-full w-full object-cover transition duration-500 group-hover:scale-105"/>

      <div className="absolute left-3 top-3">
        <Badge className="bg-white/90">Inspired by</Badge>
      </div>
    </div>
    <div className="p-4">
      <div className="flex items-start justify-between gap-2">
        <div>
          <h3 className="text-base font-semibold">{p.name}</h3>
          <p className="text-xs text-zinc-500">{p.dupeOf}</p>
        </div>
        <div className="flex items-center gap-1 text-amber-500 text-sm">
          <Star size={16} fill="currentColor" className="-mt-px"/>
          <span>{p.rating}</span>
        </div>
      </div>
      <p className="mt-2 text-sm text-zinc-600">{p.notes}</p>
      <div className="mt-4 flex items-center justify-between">
        <span className="text-lg font-bold">₹{p.price}</span>
        {/* <Button className="inline-flex items-center gap-2"><Droplets size={16}/> Add</Button> */}
        <Button className="inline-flex items-center gap-2"><SprayCan size={16}/> Add</Button>
      </div>
    </div>
  </div>
);




export default ProductCard
